name: .NET Core Build with Tests

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      config: 'Release'
      
    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 5.0.100
      
      # restore dependencies  
    - name: Install dependencies
      run: dotnet restore
      #the tests directory has the xUnit tests
      working-directory: tests
      
      # build project
    - name: Build
      run: dotnet build --configuration $config --no-restore
      working-directory: tests
      
    - name: set pr build number (if pr)
      id: PRNUMBER
      if: ${{ github.event_name == 'pull_request' }}
      uses: kkak10/pr-number-action@v1.3
      
    # set report file and title 
    - name: Set Test Title
      run: | 
            if ${{ github.event_name == 'pull_request' }}
            then
              echo "title=BIS 305 Test Run for PR #${{steps.PRNUMBER.outputs.pr}} (${{github.run_number}})" >> $GITHUB_ENV
              echo "file_name=BIS305TestReport.${{steps.PRNUMBER.outputs.pr}}.${{github.run_number}}.md" >> $GITHUB_ENV
            else
              echo "title=BIS 305 Test Run ${{github.run_number}}" >> $GITHUB_ENV
              echo "file_name=BIS305TestReport.${{github.run_number}}.md" >> $GITHUB_ENV
            fi      

      # run tests with built project
    - name: Test PR
      run: dotnet test --no-restore --no-build --configuration $config --logger:"liquid.md;LogFileName=${{github.workspace}}/${{env.file_name}};Title=${{env.title}};"
      working-directory: tests
      
      # upload report as build artifact
    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v2
      if: ${{always()}}
      with:
        name: ${{github.repository_owner}} Test Run ${{github.run_number}}
        path: ${{github.workspace}}/${{env.file_name}}
      
      # add report as PR comment (if PR)
    - name: comment PR
      uses: machine-learning-apps/pr-comment@master
      if: ${{ github.event_name == 'pull_request' }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        path: ${{env.file_name}}
